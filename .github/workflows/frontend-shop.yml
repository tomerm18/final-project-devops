name: Docker Image CI shop-online-app

on:
  push:
    branches: [ "main" ]
    paths:
      - 'shop-online-app/frontend/**'
  pull_request:
    paths:
      - 'shop-online-app/frontend/**'

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #work withe TAG in repo

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Prune buildx cache
      #   run: docker buildx prune --all --force

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # read file and output the tag to contents
      - name: read file
        id: tag
        run: |
          echo "contents=$(cat ./shop-online-app/frontend/image-tag.txt)" >> $GITHUB_OUTPUT

      # print the contents
      - name: PrintFile contents
        run: echo "${{ steps.tag.outputs.contents }}"      

      - name: Build Docker image (no push yet)
        uses: docker/build-push-action@v6
        with:
          context: . # the context is the root directory
          file: ./shop-online-app/frontend/Dockerfile
          push: false
          load: true  # ← Required for Trivy to scan local image
          tags: react-fronted:${{ steps.tag.outputs.contents }}

      - name: Scan local image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'react-fronted:${{ steps.tag.outputs.contents }}'  # ← Local image tag
          format: 'table' # format the output
          exit-code: 0  # ← Fail workflow on vulnerabilities
          ignore-unfixed: true # don't fail on vulnerabilities that are not fixed
          severity: 'CRITICAL' # only show critical vulnerabilities

      # print the image with tag
      - name: Print image tag
        run: echo "${{ secrets.DOCKERHUB_USERNAME }}/react-fronted:${{ steps.tag.outputs.contents }}"

      - name: Push image to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./shop-online-app/frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/react-fronted:${{ steps.tag.outputs.contents }}
            ${{ secrets.DOCKERHUB_USERNAME }}/react-fronted:latest

      - name: Create Git tag from file
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.tag.outputs.contents }}
          git push origin ${{ steps.tag.outputs.contents }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}